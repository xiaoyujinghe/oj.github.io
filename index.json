[{"authors":["x-lab"],"categories":null,"content":"X-Lab is a combination of two leading and pioneering laboratories from computer science and data science and engineering respectively in Tongji University (同济大学) and East China Normal University (华东师范大学).The lab is supported by a number of core members, including doctorial supervisors, Ph.D students, master students and undergraduate students.\nX-Lab is an intercross multi-discipline, cutting-edge research lab which focuses on the following research domains: Cloud Computing, Big Data, Data Intelligence, and Education Science \u0026amp; Technology.\nWith regard to the lab culture, we keep all along holding the several opinions below:\n Advocating lofty academic feelings and technical feelings! Encourage highly respected, open and innovative geek culture! Rejecting the “sophisticated egoism”! Adhering to the “open”, “equal”, ”positive”, ”mutual respect”, “mutual support” culture! Stay hungry, stay foolish  Your attention to our lab would be highly appreciated. It’s not only our pursuit but also our faith endeavoring to build a harmonious team with a strong sense of belonging: mentors and students like one family!\n* We are always looking for highly-motivated students to work with us on the exciting area of computer science. If you are interested, please contact us by email.\n","date":1590624000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1590624000,"objectID":"3e8ac7f1a634a255eb5b5e3e148a05d5","permalink":"https://xiaoyujinghe.github.io/author/x-lab/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/x-lab/","section":"authors","summary":"X-Lab is a combination of two leading and pioneering laboratories from computer science and data science and engineering respectively in Tongji University (同济大学) and East China Normal University (华东师范大学).The lab is supported by a number of core members, including doctorial supervisors, Ph.","tags":null,"title":"X-Lab","type":"authors"},{"authors":["heyujing"],"categories":null,"content":"A contributer to DesignThinking-OJ. ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"5ec9e761a9da10387c734db37bb121d4","permalink":"https://xiaoyujinghe.github.io/author/%E4%BD%95%E9%9B%A8%E8%8F%81/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E4%BD%95%E9%9B%A8%E8%8F%81/","section":"authors","summary":"A contributer to DesignThinking-OJ. ","tags":null,"title":"何雨菁","type":"authors"},{"authors":["Sunqiushi"],"categories":null,"content":"A contributer to DesignThinking-OJ. ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"0714a4a974f6482427db528865e91d82","permalink":"https://xiaoyujinghe.github.io/author/%E5%AD%99%E7%A7%8B%E5%AE%9E/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%AD%99%E7%A7%8B%E5%AE%9E/","section":"authors","summary":"A contributer to DesignThinking-OJ. ","tags":null,"title":"孙秋实","type":"authors"},{"authors":["Zhuhanlun"],"categories":null,"content":"A contributer to DesignThinking-OJ. ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"14912a47b617c23579750a8c491a0a77","permalink":"https://xiaoyujinghe.github.io/author/%E6%9C%B1%E6%B1%89%E4%BC%A6/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E6%9C%B1%E6%B1%89%E4%BC%A6/","section":"authors","summary":"A contributer to DesignThinking-OJ. ","tags":null,"title":"朱汉伦","type":"authors"},{"authors":["zhangkeer"],"categories":null,"content":"A contributer to OJ. ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"fe4a20b4cd1351d299be87604644f57e","permalink":"https://xiaoyujinghe.github.io/author/%E7%AB%A0%E5%8F%AF%E5%84%BF/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E7%AB%A0%E5%8F%AF%E5%84%BF/","section":"authors","summary":"A contributer to OJ. ","tags":null,"title":"章可儿","type":"authors"},{"authors":["Zhengjiachen"],"categories":null,"content":"A contributer to OnlineJudge system in Design Thinking. ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"b6f7cddd2c805fdf123f4879464041d2","permalink":"https://xiaoyujinghe.github.io/author/%E9%83%91%E4%BD%B3%E8%BE%B0/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E9%83%91%E4%BD%B3%E8%BE%B0/","section":"authors","summary":"A contributer to OnlineJudge system in Design Thinking. ","tags":null,"title":"郑佳辰","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]]\rname = \u0026quot;Courses\u0026quot;\rurl = \u0026quot;courses/\u0026quot;\rweight = 50\r Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]]\rname = \u0026quot;Docs\u0026quot;\rurl = \u0026quot;docs/\u0026quot;\rweight = 50\r Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://xiaoyujinghe.github.io/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"Reports and documentation for class and personal projects\n","date":1536422400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536422400,"objectID":"4cdd37113783e47641dd300543c94e1b","permalink":"https://xiaoyujinghe.github.io/docs/","publishdate":"2018-09-09T00:00:00+08:00","relpermalink":"/docs/","section":"docs","summary":"Reports and documentation for class and personal projects","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"https://xiaoyujinghe.github.io/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"https://xiaoyujinghe.github.io/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":"\rClick on the Slides button above to view the built-in slides feature.\r\r\rSlides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://xiaoyujinghe.github.io/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["fangxiaojun"],"categories":["technology"],"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python\rimport pandas as pd\rdata = pd.read_csv(\u0026quot;data.csv\u0026quot;)\rdata.head()\r```\r renders as\nimport pandas as pd\rdata = pd.read_csv(\u0026quot;data.csv\u0026quot;)\rdata.head()\r Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}\r{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$\r renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\\\\\r1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\r renders as\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\n1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\r```\r renders as\ngraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\r An example sequence diagram:\n```mermaid\rsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good!\r```\r renders as\nsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good!\r An example Gantt diagram:\n```mermaid\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\r```\r renders as\ngantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\r An example class diagram:\n```mermaid\rclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\r```\r renders as\nclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\r An example state diagram:\n```mermaid\rstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\r```\r renders as\nstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\r Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example\r- [x] Write diagram example\r- [ ] Do something else\r renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header |\r| ------------- | ------------- |\r| Content Cell | Content Cell |\r| Content Cell | Content Cell |\r renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a shortcode for asides, also referred to as notices, hints, or alerts. By wrapping a paragraph in {{% alert note %}} ... {{% /alert %}}, it will render as an aside.\n{{% alert note %}}\rA Markdown aside is useful for displaying notices, hints, or definitions to your readers.\r{{% /alert %}}\r renders as\n\rA Markdown aside is useful for displaying notices, hints, or definitions to your readers.\r\r\rIcons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R\r renders as\n\r Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it 🙌 ","date":1591519393,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591519393,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://xiaoyujinghe.github.io/post/writing-technical-content/","publishdate":"2020-06-07T16:43:13+08:00","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Learn how to write technical content by using various skills.","tags":["technology"],"title":"Writing Technical Content in Academic","type":"post"},{"authors":["fangxiaojun"],"categories":["technology"],"content":"from IPython.core.display import Image\rImage('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')\r print(\u0026quot;Welcome to Academic!\u0026quot;)\r Welcome to Academic!\r Install Python and JupyterLab \rInstall Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/\rcd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/\rjupyter lab index.ipynb\r The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (\rfront matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n---\rtitle: My post's title\rdate: 2019-09-01\r# Put any other Academic metadata here...\r---\r Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.\r Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1591518801,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591518801,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://xiaoyujinghe.github.io/post/jupyter/","publishdate":"2020-06-07T16:33:21+08:00","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks.","tags":["technology"],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":["liuchang"],"categories":["Cloud Computing","Open Source"],"content":"","date":1591425700,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591425700,"objectID":"4fdbcfd66e377f08615a1eb49a953f67","permalink":"https://xiaoyujinghe.github.io/project/gitcourse/","publishdate":"2020-06-06T14:41:40+08:00","relpermalink":"/project/gitcourse/","section":"project","summary":"A react front framework which can present courses made by repositories.","tags":["Cloud Computing","Open Source"],"title":"GitCourse","type":"project"},{"authors":["zhaoshengyu"],"categories":["Big Data","Open Source"],"content":"","date":1591336955,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591336955,"objectID":"a4e70f26af804d717e8c077405c5166b","permalink":"https://xiaoyujinghe.github.io/project/hypertrons/","publishdate":"2020-06-05T14:02:35+08:00","relpermalink":"/project/hypertrons/","section":"project","summary":"An open source robot hosting platform which supports GitHub and GitLab.","tags":["Big Data","Open Source"],"title":"Hypertrons","type":"project"},{"authors":["fangxiaojun"],"categories":["Demo"],"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1591002358,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591002358,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://xiaoyujinghe.github.io/project/internal-project/","publishdate":"2020-06-01T17:05:58+08:00","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Demo"],"title":"Internal Project","type":"project"},{"authors":["fangxiaojun"],"categories":["demo"],"content":"","date":1590830089,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590830089,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://xiaoyujinghe.github.io/project/external-project/","publishdate":"2020-05-30T17:14:49+08:00","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["demo"],"title":"External Project","type":"project"},{"authors":["fangxiaojun"],"categories":["algorithm"],"content":"前言 本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。\n本文并不会详细讲解每种排序算法的原理，网上有很多很好的教程，大家可以自己去搜了看。\n最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 LeetCode 912. 排序数组 这道题。\n性质汇总  如果发现表中有错误，请留言告知。\n    算法 最好 最坏 平均 空间 稳定性 是否基于比较     冒泡排序 $O(n)$ $O(n^2)$ $O(n^2)$ $O(1)$ $\\checkmark$ $\\checkmark$   选择排序 $O(n^2)$ $O(n^2)$ $O(n^2)$ $O(1)$ $\\times$ $\\checkmark$   插入排序 $O(n)$ $O(n^2)$ $O(n^2)$ $O(1)$ $\\checkmark$ $\\checkmark$   快速排序 $O(n\\log n)$ $O(n^2)$ $O(n\\log n)$ $O(\\log n)$~$O(n)$ $\\times$ $\\checkmark$   归并排序 $O(n\\log n)$ $O(n\\log n)$ $O(n\\log n)$ $O(n)$ $\\checkmark$ $\\checkmark$   希尔排序 $O(n^{1.3})$ $O(n^2)$ $O(n\\log n)$~$O(n^2)$ $O(1)$ $\\times$ $\\checkmark$   计数排序 $O(n+k)$ $O(n+k)$ $O(n+k)$ $O(n+k)$ $\\checkmark$ $\\times$   基数排序 $O(nk)$ $O(nk)$ $O(nk)$ $O(n+k)$ $\\checkmark$ $\\times$   桶排序 $O(n)$ $O(n)$ $O(n)$ $O(n+m)$ $\\checkmark$ $\\times$   堆排序 $O(n\\log n)$ $O(n\\log n)$ $O(n\\log n)$ $O(1)$ $\\times$ $\\checkmark$    维基百科 我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。\n冒泡排序 : Bubble_sort\n选择排序 : Selection_sort\n插入排序 : Insertion_sort\n快速排序 : Quicksort\n归并排序 : Merge_sort\n希尔排序 : Shellsort\n计数排序 : Counting_sort\n基数排序 : Radix_sort\n桶排序 : Bucket_sort\n堆排序 : Heapsort\n代码实现 所有的排序算法接口都是相同的，也就是 vector\u0026lt;int\u0026gt; xxxSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) 。只需要你传入一个 vector\u0026lt;int\u0026gt; 类型的数组，就能返回排序后的结果。\n运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。\nclass Solution {\rpublic:\rvector\u0026lt;int\u0026gt; sortArray(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rreturn quickSort(nums);\r}\r// 冒泡排序（超时）\rvector\u0026lt;int\u0026gt; bubbleSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rfor (int i = 0; i \u0026lt; n; ++i) {\rfor (int j = n-2; j \u0026gt;= i; --j) {\rif (nums[j] \u0026gt; nums[j+1]) {\rswap(nums[j], nums[j+1]);\r}\r}\r}\rreturn nums;\r}\r// 选择排序（超时）\rvector\u0026lt;int\u0026gt; selectSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rfor (int i = 0; i \u0026lt; n; ++i) {\rint idx = i;\rfor (int j = i; j \u0026lt; n; ++j) {\rif (nums[j] \u0026lt; nums[idx]) {\ridx = j;\r}\r}\rswap(nums[i], nums[idx]);\r}\rreturn nums;\r}\r// 插入排序（超时）\rvector\u0026lt;int\u0026gt; insertSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rfor (int i = 0; i \u0026lt; n; ++i) {\rfor (int j = i; j \u0026gt; 0 \u0026amp;\u0026amp; nums[j] \u0026lt; nums[j-1]; --j) {\rswap(nums[j], nums[j-1]);\r}\r}\rreturn nums;\r}\r// 快速排序（24 ms）\rvoid qSort(vector\u0026lt;int\u0026gt;\u0026amp; nums, int l, int r) {\rif (l \u0026gt;= r) return;\rint m = l;\rfor (int i = l; i \u0026lt; r; ++i) {\rif (nums[i] \u0026lt; nums[r]) {\rswap(nums[m++], nums[i]);\r}\r}\rswap(nums[m], nums[r]);\rqSort(nums, l, m-1);\rqSort(nums, m+1, r);\r}\rvector\u0026lt;int\u0026gt; quickSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rqSort(nums, 0, n-1);\rreturn nums;\r}\r// 归并排序（192 ms）\rvector\u0026lt;int\u0026gt; mSort(vector\u0026lt;int\u0026gt;\u0026amp; nums, int l, int r) {\rif (l \u0026gt;= r) return {nums[l]};\rint m = l+(r-l)/2;\rvector\u0026lt;int\u0026gt; lnums = mSort(nums, l, m);\rvector\u0026lt;int\u0026gt; rnums = mSort(nums, m+1, r);\rvector\u0026lt;int\u0026gt; res;\rint i = 0, j = 0;\rwhile (i \u0026lt;= m-l \u0026amp;\u0026amp; j \u0026lt;= r-m-1) {\rif (lnums[i] \u0026lt; rnums[j]) {\rres.push_back(lnums[i++]);\r} else {\rres.push_back(rnums[j++]);\r}\r}\rwhile (i \u0026lt;= m-l) {\rres.push_back(lnums[i++]);\r}\rwhile (j \u0026lt;= r-m-1) {\rres.push_back(rnums[j++]);\r}\rreturn res;\r}\rvector\u0026lt;int\u0026gt; mergeSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rnums = mSort(nums, 0, n-1);\rreturn nums;\r}\r// 归并排序 + 非递归（80 ms）\rvector\u0026lt;int\u0026gt; mergeSortNR(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rfor (int len = 1; len \u0026lt; n; len \u0026lt;\u0026lt;= 1) {\rfor (int l = 0; l \u0026lt; n-len; l += 2*len) {\rint m = l+len-1;\rint r = min(n-1, l+2*len-1);\rvector\u0026lt;int\u0026gt; res;\rint i = l, j = m+1;\rwhile (i \u0026lt;= m \u0026amp;\u0026amp; j \u0026lt;= r) {\rif (nums[i] \u0026lt; nums[j]) {\rres.push_back(nums[i++]);\r} else {\rres.push_back(nums[j++]);\r}\r}\rwhile (i \u0026lt;= m) {\rres.push_back(nums[i++]);\r}\rwhile (j \u0026lt;= r) {\rres.push_back(nums[j++]);\r}\rfor (int i = l; i \u0026lt;= r; ++i) {\rnums[i] = res[i-l];\r}\r}\r}\rreturn nums;\r}\r// 希尔排序（40 ms）\rvector\u0026lt;int\u0026gt; shellSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rfor (int gap = n/2; gap \u0026gt; 0; gap /= 2) {\rfor (int i = gap; i \u0026lt; n; ++i) {\rfor (int j = i; j-gap \u0026gt;= 0 \u0026amp;\u0026amp; nums[j-gap] \u0026gt; nums[j]; j -= gap) {\rswap(nums[j-gap], nums[j]);\r}\r}\r}\rreturn nums;\r}\r// 计数排序（32 ms）\rvector\u0026lt;int\u0026gt; countSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rif (!n) return {};\rint minv = *min_element(nums.begin(), nums.end());\rint maxv = *max_element(nums.begin(), nums.end());\rint m = maxv-minv+1;\rvector\u0026lt;int\u0026gt; count(m, 0);\rfor (int i = 0; i \u0026lt; n; ++i) {\rcount[nums[i]-minv]++;\r}\rvector\u0026lt;int\u0026gt; res;\rfor (int i = 0; i \u0026lt; m; ++i) {\rfor (int j = 0; j \u0026lt; count[i]; ++j) {\rres.push_back(i+minv);\r}\r}\rreturn res;\r}\r// 基数排序（不适用于负数）\rvector\u0026lt;int\u0026gt; radixSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rint maxv = *max_element(nums.begin(), nums.end());\rint maxd = 0;\rwhile (maxv \u0026gt; 0) {\rmaxv /= 10;\rmaxd++;\r}\rvector\u0026lt;int\u0026gt; count(10, 0), rank(n, 0);\rint base = 1;\rwhile (maxd \u0026gt; 0) {\rcount.assign(10, 0);\rfor (int i = 0; i \u0026lt; n; ++i) {\rcount[(nums[i]/base)%10]++;\r}\rfor (int i = 1; i \u0026lt; 10; ++i) {\rcount[i] += count[i-1];\r}\rfor (int i = n-1; i \u0026gt;= 0; --i) {\rrank[--count[(nums[i]/base)%10]] = nums[i];\r}\rfor (int i = 0; i \u0026lt; n; ++i) {\rnums[i] = rank[i];\r}\rmaxd--;\rbase *= 10;\r}\rreturn nums;\r}\r// 桶排序 (20 ms)\rvector\u0026lt;int\u0026gt; bucketSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rint maxv = *max_element(nums.begin(), nums.end());\rint minv = *min_element(nums.begin(), nums.end());\rint bs = 1000;\rint m = (maxv-minv)/bs+1;\rvector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; bucket(m);\rfor (int i = 0; i \u0026lt; n; ++i) {\rbucket[(nums[i]-minv)/bs].push_back(nums[i]);\r}\rint idx = 0;\rfor (int i = 0; i \u0026lt; m; ++i) {\rint sz = bucket[i].size();\rbucket[i] = quickSort(bucket[i]);\rfor (int j = 0; j \u0026lt; sz; ++j) {\rnums[idx++] = bucket[i][j];\r}\r}\rreturn nums;\r}\r// 堆排序（32 ms）\rvoid adjust(vector\u0026lt;int\u0026gt;\u0026amp; nums, int p, int s) {\rwhile (2*p+1 \u0026lt; s) {\rint c1 = 2*p+1;\rint c2 = 2*p+2;\rint c = (c2\u0026lt;s \u0026amp;\u0026amp; nums[c2]\u0026gt;nums[c1]) ? c2 : c1;\rif (nums[c] \u0026gt; nums[p]) swap(nums[c], nums[p]);\relse break;\rp = c;\r}\r}\rvector\u0026lt;int\u0026gt; heapSort(vector\u0026lt;int\u0026gt;\u0026amp; nums) {\rint n = nums.size();\rfor (int i = n/2-1; i \u0026gt;= 0; --i) {\radjust(nums, i, n);\r}\rfor (int i = n-1; i \u0026gt; 0; --i) {\rswap(nums[0], nums[i]);\radjust(nums, 0, i);\r}\rreturn nums;\r}\r};\r ","date":1590756417,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590756417,"objectID":"82fdf8761ba894ffb42fe5a0bf8c1415","permalink":"https://xiaoyujinghe.github.io/post/sort-algorithm/","publishdate":"2020-05-29T20:46:57+08:00","relpermalink":"/post/sort-algorithm/","section":"post","summary":"本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。","tags":["algorithm"],"title":"十大经典排序算法整理汇总","type":"post"},{"authors":["X-Lab","Ichiro Fujinaga"],"categories":null,"content":"","date":1590624000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590624000,"objectID":"32cd996256076abd368ddc1b889c4dbb","permalink":"https://xiaoyujinghe.github.io/publication/harmalysis/","publishdate":"2020-05-28T00:00:00Z","relpermalink":"/publication/harmalysis/","section":"publication","summary":"A grammar for encoding roman numeral analysis annotations within the lyrics of a symbolic music representation.","tags":["Demo"],"title":"Harmalysis: A Language for the Annotation of Roman Numerals in Symbolic Music Representations","type":"publication"},{"authors":["X-Lab","Yuval Adler"],"categories":null,"content":"","date":1588550400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588550400,"objectID":"12c51b896a231ae15fc96ebe98e72b86","permalink":"https://xiaoyujinghe.github.io/publication/doremyth/","publishdate":"2020-05-04T00:00:00Z","relpermalink":"/publication/doremyth/","section":"publication","summary":"Do-Re-Myth is an ear training game developed by Yuval Adler and Néstor Nápoles López, funded through a CIRMMT Student Award in 2019.","tags":["Demo"],"title":"Do-Re-Myth: An Ear Training Game","type":"publication"},{"authors":["X-Lab","Claire Arthur","Ichiro Fujinaga"],"categories":null,"content":"","date":1573257600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1573257600,"objectID":"0bc018bcfa7a7937e22f21c97e3b2caf","permalink":"https://xiaoyujinghe.github.io/publication/keydetection19/","publishdate":"2019-09-09T00:00:00Z","relpermalink":"/publication/keydetection19/","section":"publication","summary":"A new key detection algorithm that works in the symbolic and audio domain, furthermore, it is able to output local and global keys.","tags":["Demo"],"title":"Key-Finding Based on a Hidden Markov Model and Key Profiles","type":"publication"},{"authors":["X-Lab","Gabriel Vigliensoni","Ichiro Fujinaga"],"categories":null,"content":"","date":1559174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559174400,"objectID":"f25f13d0b95774c5069a95dc2886f86a","permalink":"https://xiaoyujinghe.github.io/publication/effects_of_translation/","publishdate":"2019-05-30T00:00:00Z","relpermalink":"/publication/effects_of_translation/","section":"publication","summary":"What happens when you translate between different symbolic music formats?","tags":["Demo"],"title":"The Effects of Translation Between Symbolic Music Formats: A Case Study with Humdrum, Lilypond, MEI, and MusicXML","type":"publication"},{"authors":["X-Lab","Ichiro Fujinaga"],"categories":null,"content":"","date":1555200000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555200000,"objectID":"51ef84f739a6812fe72136acb9c4b622","permalink":"https://xiaoyujinghe.github.io/publication/musical_tictactoe/","publishdate":"2019-04-14T00:00:00Z","relpermalink":"/publication/musical_tictactoe/","section":"publication","summary":"A music-based game mechanic based where players compete to complete cadences.","tags":["Demo"],"title":"Musical Tic-Tac-Toe","type":"publication"},{"authors":["X-Lab","Ichiro Fujinaga"],"categories":null,"content":"The video looks promising, where is the code? Although the intention of dandelot is to be available for free for anyone to play, some of the assets used for developing the game are proprietary. For the time being, the code is not available online.\nIf you really want to play it, drop an email and I will send you a compiled version of the game. If you want the code to extend it or fork it into your own, we can talk about that.\n","date":1555113600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555113600,"objectID":"a710694cf5219de6aeec761287fd32a9","permalink":"https://xiaoyujinghe.github.io/publication/dandelot/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/dandelot/","section":"publication","summary":"Dandelot is a computer game that trains your skills for reading music in the treble, bass, and alto clefs.","tags":["Demo"],"title":"Dandelot - Reading Music as a Game","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic \rAcademic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click \rPDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot;\rif porridge == \u0026quot;blueberry\u0026quot;:\rprint(\u0026quot;Eating...\u0026quot;)\r  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}}\r{{% fragment %}} **Two** {{% /fragment %}}\r{{% fragment %}} Three {{% /fragment %}}\r Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}}\r- Only the speaker can read these notes\r- Press `S` key to view\r{{% /speaker_note %}}\r Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}}\r{{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}}\r{{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}\r  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1,\r.reveal section h2,\r.reveal section h3 {\rcolor: navy;\r}\r  Questions? \rAsk\n\rDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://xiaoyujinghe.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"This is a report for my final project of the MUMT 618: Computational Modeling of Musical Acoustic Systems class at McGill University.\nI will describe my experience implementing a digital model of distortion that has been presented in the paper titled \u0026ldquo;Simplified, physically-informed models of distortion and overdrive guitar effects pedals\u0026rdquo;, presented in 2007 by David Yeh, Jonathan Abel, and Julius Smith at the DAFx'07 Conference.\nAlthough this paper describes two models:\n Boss DS-1, a distortion pedal Ibanez TS-9, an overdrive pedal  I have only implemented the model of the Boss DS-1 distortion pedal. The implementation provided has been done in MATLAB and does not opertate in real-time, however, a real-time implementation should not be difficult to derivate from the given code. I also provide a few audio examples of the audio effect. As of my knowledge, there are no existing audio examples or code for this model previous to this write-up, therefore, I consider it is a valuable contribution for anyone following the ideas of this paper for reproducing or improving the model.\nOverview A high-level overview can be seen in the following diagram from the paper\n\rOverview of the Boss DS-1 model, obtained from Yeh et al. (2007)\r\r\rIt is possible that all of these stages may have an audible effect in the output produced by the physical pedal, however, the model only provides a continuous-time transfer function for the Gain + filter and the Saturating nonlin stages, therefore, this implementation concentrates in these two stages only.\nThe diagrams presented in the paper are excerpts of the circuit, which are sometimes difficult to follow, therefore, as an additional resource, it was very helpful to consult this article from ElectroSmash. In this document, a full view of the schematic is displayed with the different stages labeled.\n\rSchematic of the Boss DS-1, obtained from ElectroSmash.com\r\r\rThe Gain + filter stage in the paper\u0026rsquo;s diagram corresponds to the Transistor Booster stage of the schematic, its main component is a bipolar junction transistor. The Saturating nonlin stage of the paper\u0026rsquo;s diagram corresponds roughly to the Op-Amp Gain Stage. From now on, I will refer to the names of the schematic as I find them more intuitive.\nTransistor Booster Stage This stage corresponds to a single bipolar junction transistor, the continuous-time transfer function provided in the paper is the following:\n$$ H(s) = \\frac{s^{2}}{(s + \\omega_1) (s + \\omega_2)} $$\nwhere $ \\omega_1 = 2\\pi3 $ and $ \\omega_2 = 2\\pi600 $\nOp-Amp Gain Stage This stage corresponds to the main nonlinearity of the circuit, according to the paper. One parameter is provided in this stage to control the amount of distortion that the audio effect will output. The continuous-time transfer function is defined as following:\n$$ H(s) = \\frac{(s + \\frac{1}{R_t C_c}) (s + \\frac{1}{R_b C_z}) + \\frac{s}{R_b C_c}}{(s + \\frac{1}{R_t C_c})(s + \\frac{1}{R_b C_z})} $$\nwhere $$R_t = 100 000 D $$ $$R_b = (1-D)100 000 + 4700$$ $$C_z = 0.000 001$$ $$C_c = 0.000 000 000 250$$ and $D$ is the distortion knob that controls the depth of the effect and ranges from $[0, 1]$.\nAs one may guess, these continuous-time transfer functions require discretization in order to be implemented in a digital system. In order to discretize them, Yeh et al. propose the use of the bilinear transform. In the paper\u0026mdash;as well as in David Yeh\u0026rsquo;s PhD dissertation\u0026mdash;a list of (very useful) templates has been included, which helps in the process of discretizing the two continuous-time transfer functions used in this model. The relevant templates for this implementation are the templates corresponding to second-order filters.\nBilinear Transform In order to discretize a continuous-time transfer function, first, we should put the continuous-time transfer function in the following form $$ H(s) = \\frac{b_2 s^2 + b_1 s + b_0}{a_2 s^2 + a_1 s + a_0} $$\nOnce we compute the corresponding coefficients, they can be placed in a discrete-time transfer function of the form\n$$ H(z) = \\frac{B_0 + B_1 z^{-1} + B_2 z^{-2}}{A_0 + A_1 z^{-1} + A_2 z^{-2}} $$\nThe discrete-time coefficients of this transfer function can be obtained from the following equations $$ B_0 = b_0 + b_1 c = b_2 c^2 $$ $$ B_1 = 2b_0 - 2b_2 c^2 $$ $$ B_2 = b_0 - b_1 c = b_2 c^2 $$ $$ A_0 = a_0 + a_1 c = a_2 c^2 $$ $$ A_1 = 2a_0 - 2a_2 c^2 $$ $$ A_2 = a_0 - a_1 c = a_2 c^2 $$\nAfter plugging the coefficients into the discrete-time transfer function, we should be able to implement the resulting transfer function as a digital filter.\nImplementation of the Transistor Booster Stage Using the steps described above, I now describe the implementation of the Transistor Booster Stage part of the model.\nThe first step would be to put the given continuous-time transfer function in the form of the bilinear transform template $$ H(s) = \\frac{s^2}{s^2 + (\\omega_1 + \\omega_2)s + \\omega_1 \\omega_2} $$ From here, the continuous-time coefficients can be easily extracted $$ b_2 = 1 $$ $$ b_1 = 0 $$ $$ b_0 = 0 $$ $$ a_2 = 1 $$ $$ a_1 = \\omega_1 + \\omega_2 = 2\\pi 3 + 2\\pi 600 = 1206\\pi $$ $$ a_0 = \\omega_1 \\omega_2 = (2\\pi 3)(2 \\pi 600) = 7200\\pi^2 $$\nWorking the templates for the discrete-time coefficients results in the following $$ B_0 = 4fs^2 $$ $$ B_1 = -8fs^2 $$ $$ B_2 = 4fs^2 $$ $$ A_0 = 7200\\pi^2 + 2412\\pi fs + 4fs^2 $$ $$ A_1 = 14400\\pi^2 - 8fs^2 $$ $$ A_2 = 7200\\pi^2 - 2412\\pi fs + 4fs^2 $$\nShowing once again the template of the second-order discrete-time transfer function $$ H(z) = \\frac{B_0 + B_1 z^{-1} + B_2 z^{-2}}{A_0 + A_1 z^{-1} + A_2 z^{-2}} $$\nPlugging the values of the coefficients recently found, gives the following equation $$ {\\scriptsize H(z) = \\frac{4fs^2 - 8fs^2 z^{-1} + 4fs^2 z^{-2}}{(7200\\pi^2 + 2412\\pi fs + 4fs^2) +(14400\\pi^2 - 8fs^2) z^{-1} + (7200\\pi^2 - 2412\\pi fs + 4fs^2) z^{-2}}} $$\nAfter dividing by $4$, factorizing $fs$, and doing some algebra to simplify the equation, this can be expressed as: $$ {\\small H(z) = \\frac{1 -2 z^{-1} + z^{-2}}{(1800 \\Omega^2 + 603 \\Omega + 1) + (3600 \\Omega^2 - 2) z^{-1} + (1800\\Omega^2 - 603\\Omega + 1) z^{-2}} } $$\nwith $\\Omega = \\frac{\\pi}{fs}$\nThe implementation of this discrete-time transfer function results in a filter with the following magnitude response:\n\rMagnitude response of the implemented Transistor Booster Stage (uncorrected)\r\r\rBy inspecting the original magnitude response shown in the paper, it can be concluded that the implemented filter should output above $30dB$ of gain in its bandpass.\n\rMagnitude response of the Transistor Booster Stage shown at Yeh et al. (2007)\r\r\rLuckily, in the corresponding section of this stage, the paper mentions that the expected gain in the bandpass is, in fact, $36dB$. Using this information, an additional gain, $g$, is included in the discrete-time transfer function:\n$$ {\\small H(z) = \\frac{g(1 -2 z^{-1} + z^{-2})}{(1800 \\Omega^2 + 603 \\Omega + 1) + (3600 \\Omega^2 - 2) z^{-1} + (1800\\Omega^2 - 603\\Omega + 1) z^{-2}} } $$\nwhere the equation, $36dB = \\log_{10}(g) * 20$, can be used to obtain the value of $g$\n$$ g = 10^{\\frac{36}{20}} = 63.0957 $$\nThe resulting magnitude response resembles much more the magnitude response shown in the paper\n\rMagnitude response of the implemented Transistor Booster Stage (corrected)\r\r\rThis filter\u0026mdash;including its correction\u0026mdash;can be implemented with the following MATLAB function:\n% Transistor Booster Stage\r% Implementation by Nestor Napoles Lopez\r% based on the paper by Yeh et al. (2007)\rfunction y = bjtfilt(x, fs)\r% After working the math, I put all the discrete-time\r% coefficients in terms of this variable coeff\rcoeff = pi/fs;\rB0 = 1;\rB1 = -2;\rB2 = 1;\rA0 = 1800.*coeff.^2 + 603.*coeff + 1;\rA1 = 3600.*coeff.^2 - 2;\rA2 = 1800.*coeff.^2 - 603.*coeff + 1;\r% We obtain the gain from\r% 36dB = log10(x) * 20\ramp = 10.^(36/20);\rB = amp .* [B0, B1, B2];\rA = [A0, A1, A2];\ry = filter(B, A, x);\rend\r Implementation of the Op-Amp Gain Stage Just as done during the Transistor Booster Stage, the implementation of the Op-Amp Gain Stage starts from a given continuous-time transfer function $$ H(s) = \\frac{(s + \\frac{1}{R_t C_c}) (s + \\frac{1}{R_b C_z}) + \\frac{s}{R_b C_c}}{(s + \\frac{1}{R_t C_c})(s + \\frac{1}{R_b C_z})} $$\nPutting this transfer function in the form of the bilinear transform template $$ H(s) = \\frac{s^2 + (\\frac{1}{R_b C_z} + \\frac{1}{R_t C_c} + \\frac{1}{R_b C_c})s + \\frac{1}{R_t C_c R_b C_z}}{s^2 + (\\frac{1}{R_b C_z} + \\frac{1}{R_t C_c})s + \\frac{1}{R_t C_c R_b C_z}} $$\nThe continous-time coefficients can be obtained $$ b_2 = 1 $$ $$ b_1 = \\frac{1}{R_b C_z} + \\frac{1}{R_t C_c} + \\frac{1}{R_b C_c} $$ $$ b_0 = \\frac{1}{R_t C_c R_b C_z} $$ $$ a_2 = 1 $$ $$ a_1 = \\frac{1}{R_b C_z} + \\frac{1}{R_t C_c} $$ $$ a_0 = \\frac{1}{R_t C_c R_b C_z} $$\nSome of these coefficients are equivalent (e.g., $a_0 = b_0$), therefore, they can be summarized in the following coefficients: $$ ab_2 = 1 $$ $$ a_1 = \\frac{1}{R_b C_z} + \\frac{1}{R_t C_c} $$ $$ b_1 = a_1 + \\frac{1}{R_b C_c} $$ $$ ab_0 = \\frac{1}{R_t C_c R_b C_z} $$\nThe next step is to obtain the discrete-time coefficients, these can be expressed in terms of the simplified list of continuous-time coefficients presented above: $$ B_0 = ab_0 + b_1 c + c^2 $$ $$ B_1 = 2ab_0 - 2c^2 $$ $$ B_2 = ab_0 - b_1 c + c^2 $$ $$ A_0 = ab_0 + a_1 c + c^2 $$ $$ A_1 = 2ab_0 - 2c^2 $$ $$ A_2 = ab_0 - a_1 c + c^2 $$\nIn this case, the resulting magnitude response\n\rMagnitude response of the implemented Op-Amp Gain Stage\r\r\ris quite similar to the magnitude response shown in the paper\n\rMagnitude response of the Op-Amp Gain Stage shown at Yeh et al. (2007)\r\r\rThe different colors of the first plot represent the magnitude response with values of $D$ going from $0.1$ to $1.0$. This is the MATLAB function that implements this filter:\n% Op-Amp Gain Stage\r% Implementation by Nestor Napoles Lopez\r% based on the paper by Yeh et al. (2007)\rfunction y = opampfilt(x, fs, DIST)\r% Resistors and capacitors from the model\rRt = 100000 * DIST;\rRb = 100000*(1-DIST) + 4700;\rCz = 0.000001;\rCc = 0.000000000250;\r% Constant for the bilinear transform\rc = 2*fs;\r% Continuous-time coefficients (reduced)\rab0 = 1 / (Rt*Cc*Rb*Cz);\ra1 = 1/(Rb*Cz) + 1/(Rt*Cc);\rb1 = a1 + 1/(Rb*Cc);\r% Discrete-time coefficients\rB0 = ab0 + b1*c + c.^2;\rB1 = 2*ab0 - 2*c.^2;\rB2 = ab0 - b1*c + c.^2;\rA0 = ab0 + a1*c + c.^2;\rA1 = B1;\rA2 = ab0 - a1*c + c.^2;\rB = [B0, B1, B2];\rA = [A0, A1, A2];\ry = filter(B, A, x);\rend\r Diode-Clipper At the end of the Op-Amp Gain Stage, there is an additional step that simulates the diode that clips the samples exceeding a gain threshold, in the case of the digital implementation, that threshold consists of $abs(x[n]) \\geq 1.0$. The diode-clipper has been implemented using one of the proposed methods in the paper:\n$$ \\text{clipper}(x) = \\frac{x}{(1 + |x|^n)^{1/n}} $$\nwith $n = 2.5$\nThe MATLAB code for the clipping function is the following:\n% Diode clipper\r% Implementation by Nestor Napoles Lopez, December 2018\r% based on the paper by Yeh et al. (2007)\rfunction x = diodeclip(x)\rn = 2.5;\rfor i=1:length(x)\rx(i) = x(i) / (1 + abs(x(i)).^n).^(1/n);\rend\rend\r As a final step, I provide a script that cascades the two stages of the models to process an input audio example:\n% DS-1, main script\r% Implementation by Nestor Napoles Lopez, December 2018\r% based on the paper by Yeh et al. (2007)\r% Sample audio\r[x, fs] = audioread('guitar_clean.wav');\r% Bipolar Junction Transistor Stage\ry = bjtfilt(x, fs);\r% Op-amp Gain Stage\rD = 1; % D lies between [0, 1]\ry = opampfilt(y, fs, D);\r% Diode clipper\ry = diodeclip(y);\rs = audioplayer(y, fs);\rplay(s);\r Here is an example of the model applied to an audio sample of a clean electric guitar1:\nOriginal audio $ $\nTransistor Booster Stage only $ $\nOp-Amp Gain Stage only $ $\nTransistor Booster Stage and Op-Amp Gain Stage $ $\n  This audio sample has been obtained from FreeSound. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1544284800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1544284800,"objectID":"069767edc8d088185385f8afd1c31fbd","permalink":"https://xiaoyujinghe.github.io/docs/mumt618/","publishdate":"2018-12-09T00:00:00+08:00","relpermalink":"/docs/mumt618/","section":"docs","summary":"This is a report for my final project of the MUMT 618: Computational Modeling of Musical Acoustic Systems class at McGill University.\nI will describe my experience implementing a digital model of distortion that has been presented in the paper titled \u0026ldquo;Simplified, physically-informed models of distortion and overdrive guitar effects pedals\u0026rdquo;, presented in 2007 by David Yeh, Jonathan Abel, and Julius Smith at the DAFx'07 Conference.","tags":null,"title":"Implementing a digital model of the Boss DS-1 distortion pedal","type":"docs"},{"authors":["X-Lab","Gabriel Vigliensoni","Ichiro Fujinaga"],"categories":null,"content":"","date":1538092800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538092800,"objectID":"046a137a938d278a44664d5147fefe73","permalink":"https://xiaoyujinghe.github.io/publication/encoding_matters/","publishdate":"2018-09-28T00:00:00Z","relpermalink":"/publication/encoding_matters/","section":"publication","summary":"Examples of encoding discrepancies that have been introduced either during the encoding of the symbolic music files or during the translation of the original file into other symbolic formats.","tags":["Demo"],"title":"Encoding Matters","type":"publication"},{"authors":null,"categories":null,"content":"Representative Journal Papers  Partitioning big graph with respect to arbitrary proportions in a streaming manner, Future Generation Computer Systems, 2018, 80(3): 1-11. A Reliability Analysis for Successful Execution of Parallel DAG Tasks, Journal of Information Science and Engineering, 2017, 33(1): 81-99. Schedulability Analysis and Symbolic Verification Method for Heterogeneous Multicore Real-time Systems, International Journal of Performability Engineering, 2017, 13(6): 785-795. Energy Consumption Analysis Satisfying Time-Energy-Probability Constraints for Modern DVFS Microprocessor, IETE Technical Review, 2015, 32(4): 260-272. Security-aware Intermediate Data Placement Strategy in Scientific Cloud Workflows, Knowledge and Information Systems, 2014, 41(2): 423-447. Using Priced Timed Automaton to Analyze the Energy Consumption in Cloud Computing Environment, Cluster Computing, 2014, 17(4): 1295-1307. A Novel Scalability Metric About Iso-area of Performance for Parallel Computing, The Journal of Supercomputing, 2014, 68(2): 652-671. Adaptive Energy-efficient Scheduling Algorithm for Parallel Tasks on Homogeneous Clusters, Journal of Network and Computer Applications, 2014, 41: 101–113. Time-Efficient Protocols for Neighbor Discovery in Wireless Ad Hoc Networks, IEEE Transactions on Vehicular Technology, 2013, 62(6): 2780-2791. A Bayesian Network Based Knowledge Engineering Framework for IT Service Management, IEEE Transactions on Services Computing, 2013, 6(1): 76-88. Cloud-DLS: Dynamic Trusted Scheduling for Cloud Computing, Expert System with Applications, 2012, 39(3): 2321-2329. Towards Reliable Self-Clustering Mobile Ad Hoc Networks, Computers and Electrical Engineering, 2012, 38(3): 551-562. Bayesian Intelligent Semantic Mashup for Tourism, Concurrency and Computation: Practice and Experience, 2011, 17(23): 850–862. Adaptive Bare Bones Particle Swarm Inspired by Cloud Model, IEICE Transactions on Information and Systems, 2011, E94.D(8): 1527-1538. Using Evidence Based Content Trust Model for Spam Detection, Expert System with Applications, 2010, 37 (8): 5599-5606. Bayesian Cognitive Trust Model Based Self-Clustering Algorithm for MANETs, Science in China: Series F Information Sciences, 2010, 53(3): 494-505. An Evidence Based Iterative Content Trust Algorithm for the Credibility of Online News, Concurrency and Computation: Practice and Experience, 2009, 15(21), 1857-1881. Trusted Dynamic Level Scheduling Based on Bayes Trust Model. Science in China: Series F Information Sciences, 2007, 50(3): 456-469. Reg：一种最大化内存共享与最小化运行时环境的超轻量级容器, 计算机研究与发展, 2019. 一种面向云构软件的云操作系统, 计算机科学, 2017, 44(11): 33-40. 高效可证明安全的基于属性的在线/离线加密机制, 通信学报, 2014, 35(7): 104-112. 绿色评价模型的互模拟等价及逻辑保持, 计算机学报, 2013, 36(5): 967-976. 同构DVS集群中基于自适应阈值的并行任务节能调度算法, 计算机学报, 2013, 36(2): 393-407. 基于内存操作的动态软件水印算法, 通信学报, 2013, 34(2): 128-137. 一种基于线程关系的软件水印算法, 电子学报, 2012, 40(5): 891-896. 基于软件水印的软件服务保护安全协议, 通信学报, 2012, 33(z2): 176-181. 随机任务在云计算平台中能耗的优化管理方法, 软件学报, 2012, 23(2): 266-278. 基于模型检测的时间空间性能验证方法, 计算机学报, 2010, 33(9): 1621-1633. 基于Bayes认知信任模型的MANETs自聚集算法, 中国科学E辑, 2010, 40(2): 228-239. P2P网络中防止欺骗行为的一种信任度计算方法, 通信学报, 2008, 29(10): 215-222. 一种基于Bayes信任模型的可信动态级调度算法, 中国科学E辑, 2007, 37(2): 285-296. 构造基于信任机制的自组织资源拓扑, 计算机研究与发展, 2007, 44(11): 1849-1856. 一种基于信任机制的协作系统形成与演化机制, 通信学报, 2007, 27(11): 31-35.  Representative Conference Papers  Topic Crawler for OpenStack QA Knowledge Base, International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC), IEEE Computer Society, 2017. Towards an Emerging Cloudware Paradigm for Transparent Computing, In Proceedings of the 9th IEEE/ACM International Conference on Utility and Cloud Computing, Shanghai, China, IEEE Computer Society, 2016. Cloudware: An Emerging Software Paradigm for Cloud Computing, In Proceedings of the Internetware 2016, Beijing, China, September 18, 2016, pp1-10. Towards Cloudware Paradigm for Cloud Computing, The 9th IEEE International Conference on Cloud Computing, 2016, San Francisco, USA, June 27 - July 2, 2016, pp164-171. Reachability Analysis of Cost-Reward Timed Automata for Energy Efficiency Scheduling, The 2014 International Workshop on Programming Models and Applications for Multicores and Manycores (PMAN 2014), in conjunction with PPoPP 2014, Orlando, Florida, USA, February 15-19, 2014. Parallel Time-space Processing Model based Fast N-body Simulation on GPUs,In: Proceedings of the 2013 International Workshop on Programming Models and Applications for Multicores and Manycores (PMAN 2013), in conjunction with PPoPP 2013, Shenzhen, China, February 23, 2013. Large-Scale Multimedia Data Mining Using MapReduce Framework, In: Proceedings of the 4th IEEE International Conference on Cloud Computing Technology and Science (CloudCom 2012), Taipei, Taiwan, December 3-6, 2012. Towards Unified Heterogeneous Event Processing for the Internet of Things, In: Proceedings of the 3rd International Conference on the Internet of Things (IoT2012), Wuxi, China, October 24-26, 2012. A Software Watermarking Algorithm Based on Stack-State Transition Graph, In: Proceeding of the 4th International Conference on Network and System Security, Melbourne, Australia, September 1-3, 2010. An Intelligent Ontology and Bayesian Network based Semantic Mashup for Tourism, In: Proceedings of the 2008 IEEE Congress on Services(SERVICES 2008), Beijing, China, September 23-26, 2008. A Bayesian Knowledge Engineering Framework for Service Management, In: Proceedings of the IEEE/IFIP Network Operations and Management Symposium (NOMS 2008), Salvador, Bahia, Brazil, April 7-11, 2008. A Semantic Reputation Mechanism in P2P Semantic Web, In: Proceedings of the 1st Asian Semantic Web Conference (ASWC 2006), Beijing, China, September 3-7, 2006, Lecture Notes in Computer Science (LNCS), 4185, 682-688.  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"bd27a240486435b598a317c56758da53","permalink":"https://xiaoyujinghe.github.io/docs/backup/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/docs/backup/","section":"docs","summary":"Representative Journal Papers  Partitioning big graph with respect to arbitrary proportions in a streaming manner, Future Generation Computer Systems, 2018, 80(3): 1-11. A Reliability Analysis for Successful Execution of Parallel DAG Tasks, Journal of Information Science and Engineering, 2017, 33(1): 81-99.","tags":null,"title":"","type":"docs"}]